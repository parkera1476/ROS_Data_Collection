from os import listdir,system
import subprocess
import time
import json

Messages = {}
Services = {}

primitives = ["bool","int8","uint8","int16","uint16","int32","uint32","int64","uint64","float32","float64","string","time","duration","bool[]","int8[]","uint8[]","int16[]","uint16[]","int32[]","uint32[]","int64[]","uint64[]","float32[]","float64[]","string[]","time[]","duration[]"]

system("rosmsg list > msg_list.txt")
msgfile = open("msg_list.txt")
msglistlines = msgfile.readlines()
msgfile.close()

c = 0
for msg in range(len(msglistlines)): ##len(msglistlines)
    system("rosmsg info " + msglistlines[msg][:-1] + " > msg_info.txt")
    Messages[msglistlines[msg][:-1]] = {"name": msglistlines[msg][:-1],
                                        "elementType": "messageType",
                                        "fields": {}}
    msginfo = open("msg_info.txt")
    msginfolines = msginfo.readlines()
    msginfo.close()
    for x in range(len(msginfolines)-1):
        p = 0
        while msginfolines[x][p] == " ":
            p += 1
        midsp = msginfolines[x].find(" ", p)
        msgtype = msginfolines[x][p : midsp]
        msgname = msginfolines[x][midsp + 1:-1]

        if p == 0:
            lvl1 = msgname
            if (msgtype in primitives):
                Messages[msglistlines[msg][:-1]]["fields"][lvl1] = {
                    "name": msgname,
                    "elementType": "dataType",
                    "storageType": msgtype,
                    "dmfDataType":"TBD"}
            else:
                Messages[msglistlines[msg][:-1]]["fields"][lvl1] = {
                    "name": msgname,
                    "elementType": "messageType",
                    "type": msgtype,
                    "dmfDataType":"TBD"}
    c += 1
    print(c)
    
system("rossrv list > servicelist.txt")
s = open("servicelist.txt")
srvlist = s.readlines()
s.close()
c=0

for srv in srvlist:
    cmd = "rossrv info "+srv[:-1]+" > srvinfo.txt"
    system(cmd)
    s = open("srvinfo.txt")
    srvinfo = s.readlines()
    s.close()

    Services[srv[:-1]] = {"name":srv[:-1], "elementType": "service", "requestMessage": srv[:-1]+"Request", "responseMessage": srv[:-1]+"Response"}
    Messages[srv[:-1]+"Request"] = {"name": srv[:-1]+"Request",
                                    "elementType": "messageType",
                                    "fields": {}}
    Messages[srv[:-1]+"Response"] = {"name": srv[:-1]+"Response",
                                     "elementType": "messageType",
                                     "fields": {}}
    
    split = srvinfo.index("---\n")
    for msg in range(len(srvinfo)-1):
        sp = 0
        for ch in srvinfo[msg]:
                if( ch == " "):
                    sp += 1
                else:
                    break
        nmsp = srvinfo[msg].find(" ",sp)
        msgtype = srvinfo[msg][sp:nmsp]
        msgname = srvinfo[msg][nmsp+1:-1]
        
        if msg < split:    
            if sp == 0:
                lv1 = msgname
                if (msgtype in primitives):
                    Messages[srv[:-1]+"Request"]["fields"][lv1] = {"name":lv1, "elementType": "dataType", "storageType":msgtype, "dmfDataType":"TBD"}
                else:
                    Messages[srv[:-1]+"Request"]["fields"][lv1] = {"name":lv1, "elementType": "messageType", "type":msgtype, "dmfDataType":"TBD"}

        elif msg > split:
            if sp == 0:
                lv1 = msgname
                if (msgtype in primitives):
                    Messages[srv[:-1]+"Response"]["fields"][lv1] = {"name":lv1, "elementType": "dataType", "storageType":msgtype, "dmfDataType":"TBD"}
                else:
                    Messages[srv[:-1]+"Response"]["fields"][lv1] = {"name":lv1, "elementType": "messageType", "type":msgtype, "dmfDataType":"TBD"}
    c += 1
    print(c)

print(json.dumps(Messages, indent=8))
print(json.dumps(Services, indent=8))
